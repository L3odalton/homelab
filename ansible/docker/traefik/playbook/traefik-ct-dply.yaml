---
- name: Deploy and update Traefik
  hosts: docker
  vars:
    service_name: traefik
    base_dir: "/home/mgrsys/docker"
    compose_dir: "{{ base_dir }}/{{ service_name }}"
    config_dir: "{{ compose_dir }}/config"
    repo_dir: "{{ base_dir }}/repo"
    github_repo: "https://github.com/L3odalton/homelab.git"
    op_env_files:
      - { tpl: ".env.tpl", dest: ".env" }
      - { tpl: "cf-token.tpl", dest: "cf-token" }

  tasks:
    - name: Ensure service and config directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ compose_dir }}"
        - "{{ config_dir }}"

    - name: Clone/pull latest configuration from GitHub
      git:
        repo: "{{ github_repo }}"
        dest: "{{ repo_dir }}"
        update: yes
        force: yes
      register: git_status

    - name: Ensure docker network exists
      docker_network:
        name: "proxy"
        state: present

    - block:
        - name: Copy docker-compose files
          copy:
            src: "{{ repo_dir }}/ansible/docker/{{ service_name }}/compose/"
            dest: "{{ compose_dir }}/"
            remote_src: yes
          register: compose_config

        - name: Inject environment files using 1password
          loop: "{{ op_env_files }}"
          loop_control:
            label: "Injecting {{ item.dest }}"
          block:
            - name: Check if {{ item.dest }} needs to be updated
              stat:
                path: "{{ compose_dir }}/{{ item.dest }}"
              register: dest_file

            - name: Check if {{ item.tpl }} has been modified
              stat:
                path: "{{ compose_dir }}/{{ item.tpl }}"
              register: tpl_file

            - name: Inject {{ item.dest }} file using 1password
              shell: |
                op inject -i {{ compose_dir }}/{{ item.tpl }} -o {{
                compose_dir }}/{{ item.dest }}
                test -f {{ compose_dir }}/{{ item.dest }}
              environment:
                OP_SERVICE_ACCOUNT_TOKEN: "{{ op_token }}"
              register: op_result
              no_log: yes
              when:
                not dest_file.stat.exists or tpl_file.stat.mtime >
                dest_file.stat.mtime

        - name: Copy configuration files
          copy:
            src: "{{ repo_dir }}/ansible/docker/{{ service_name }}/config/"
            dest: "{{ config_dir }}/"
            remote_src: yes
          register: config_files

        - name: Create acme.json with correct permission if it does not exist
          ansible.builtin.file:
            path: "{{ config_dir }}/acme.json"
            state: touch
            mode: "0600"
            force: no

      when: git_status.changed

    - name: Deploy/update and restart container if configs changed
      community.docker.docker_compose_v2:
        project_src: "{{ compose_dir }}"
        files:
          - docker-compose.yml
        state: present
        pull: always
        recreate: always
      when: >
        git_status.changed or
        compose_config.changed or
        op_result.changed or
        config_files.changed

---
- name: Deploy and update traefik
  hosts: docker
  vars:
    service_name: traefik
    base_dir: "/home/mgrsys/docker/{{ service_name }}"
    compose_dir: "{{ base_dir }}/compose"
    config_dir: "{{ base_dir }}/config"
    appdata_dir: "{{ base_dir }}/appdata"
    repo_dir: "/home/mgrsys/tmp"
    github_repo: "https://github.com/L3odalton/homelab.git"
    docker_network: proxy

  tasks:
    - name: Ensure directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ compose_dir }}"
        - "{{ config_dir }}"
        - "{{ appdata_dir }}"

    - name: Ensure docker network(s) exist
      docker_network:
        name: "{{ docker_network }}"
        state: present

    - name: Ensure logrotate is installed
      package:
        name: logrotate
        state: present
      become: true

    - name: Clone/pull latest configuration from GitHub
      git:
        repo: "{{ github_repo }}"
        dest: "{{ repo_dir }}"
        update: yes
        force: yes
      register: git_status

    - block:
        - name: Copy files using a loop
          copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            remote_src: yes
          loop:
            - { src: "{{ repo_dir }}/ansible/docker/{{ service_name }}/compose/", dest: "{{ compose_dir }}/" }
            - { src: "{{ repo_dir }}/ansible/docker/{{ service_name }}/config/", dest: "{{ config_dir }}/" }

        - name: Remove existing .env and cf-token files
          file:
            path: "{{ compose_dir }}/{{ item }}"
            state: absent
          loop:
            - ".env"
            - "cf-token"
          ignore_errors: yes

        - name: Inject Secrets from 1Password
          shell: |
            op inject -i "{{ item.input }}" -o "{{ item.output }}"
            test -f "{{ item.output }}"
          loop:
            - { input: "{{ compose_dir }}/.env.tpl", output: "{{ compose_dir }}/.env", name: ".env" }
            - { input: "{{ compose_dir }}/cf-token.tpl", output: "{{ compose_dir }}/cf-token", name: "cf-token" }
          environment:
            OP_SERVICE_ACCOUNT_TOKEN: "{{ op_token }}"
          no_log: yes

      when: git_status.changed

    - name: check if acme.json exists
      stat:
        path: "{{ config_dir }}/acme.json"
      register: acme_file
      
    - name: Create acme.json with correct permission if it does not exist
      ansible.builtin.file:
        path: "{{ config_dir }}/certs/acme.json"
        state: touch
        mode: "0600"
        owner: "mgrsys"
        group: "mgrsys"
      when: acme_file.stat.exists == False

    - name: Ensure logrotate configuration for Traefik
      copy:
        dest: /etc/logrotate.d/traefik
        content: |
          compress
          /var/log/traefik/logs/*.log {
            size 20M
            daily
            rotate 14
            missingok
            notifempty
            postrotate
              docker kill --signal="USR1" traefik
            endscript
          }
        owner: root
        group: root
        mode: '0644'
      become: true

    - name: Deploy/update and restart docker container
      community.docker.docker_compose_v2:
        project_src: "{{ compose_dir }}"
        files:
          - docker-compose.yml
        state: present
        pull: policy
        recreate: always
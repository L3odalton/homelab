---
- name: Deploy Wiki.js with PostgreSQL
  hosts: all
  become: false
  vars:
    wiki_data_path: /opt/stacks/wikijs
    wiki_version: "2"
    postgres_version: "15-alpine"

  pre_tasks:
    - name: Setup 1Password CLI
      shell: |
        export OP_SERVICE_ACCOUNT_TOKEN="{{ op_token }}"
        op signin > /dev/null 2>&1
      no_log: true
      when: op_token is defined

    - name: Get secrets from 1Password
      shell: |
        export OP_SERVICE_ACCOUNT_TOKEN="{{ op_token }}"
        DB_USERNAME=$(op read op://secrets/WikiJS/Env/Username)
        DB_PASSWORD=$(op read op://secrets/WikiJS/Env/Password)
        DB_NAME=$(op read op://secrets/WikiJS/Env/Database)
        echo "{\"username\":\"$DB_USERNAME\",\"password\":\"$DB_PASSWORD\",\"dbname\":\"$DB_NAME\"}"
      register: op_output
      no_log: true
      when: op_token is defined

    - name: Set fact for secrets
      set_fact:
        db_username: "{{ (op_output.stdout | from_json).username }}"
        db_password: "{{ (op_output.stdout | from_json).password }}"
        db_name: "{{ (op_output.stdout | from_json).dbname }}"
      no_log: true

  tasks:
    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ wiki_data_path }}"
        - "{{ wiki_data_path }}/db"

    - name: Create proxy network if not present
      containers.podman.podman_network:
        name: proxy
        state: present

    - name: Create internal backend network if not present
      containers.podman.podman_network:
        name: backend
        state: present
        internal: true

    - name: Create PostgreSQL container
      containers.podman.podman_container:
        name: wiki-db
        image: "docker.io/library/postgres:{{ postgres_version }}"
        state: started
        restart_policy: always
        env:
          POSTGRES_USER: "{{ db_username }}"
          POSTGRES_PASSWORD: "{{ db_password }}"
          POSTGRES_DB: "{{ db_name }}"
        volumes:
          - "{{ wiki_data_path }}/db:/var/lib/postgresql/data:Z"
        network: backend

    - name: Create Wiki.js container
      containers.podman.podman_container:
        name: wiki
        image: "ghcr.io/requarks/wiki:{{ wiki_version }}"
        state: started
        restart_policy: always
        env:
          DB_TYPE: postgres
          DB_HOST: wiki-db
          DB_PORT: 5432
          DB_USER: "{{ db_username }}"
          DB_PASS: "{{ db_password }}"
          DB_NAME: "{{ db_name }}"
        ports:
          - "3000:3000"
        network: "backend,proxy"